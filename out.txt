['r0', 'r1', 'cmp', 'dir', 'dir_param', 'dist', 'high', 'high_param', 'i', 'length', 'low', 'low_param', 'midpoint', 'tag_i', 'tag_idist', 'tmp']
Noted label "@start" which points to address 0
Line: 0
		0 ldi => A
		3 $rd => B
		1 memaddr_8b => 0
		2 memaddr_8b => 0
	['A', '0', '0', 'B']
Line: 1
		0 ldi => A
		3 $rd => 7
		1 memaddr_8b => 0
		2 memaddr_8b => 7
	['A', '0', '7', '7']
Line: 2
		0 ldi => A
		3 $rd => 4
		1 memaddr_8b => 0
		2 memaddr_8b => 1
	['A', '0', '1', '4']
Line: 3
		0 rcall => E
		2 @label_8b => @bitonicSort
		3 @label_8b => @bitonicSort
	['E', '0', '@bitonicSort', '@bitonicSort']
Noted label "@end" which points to address 4
Line: 4
		0 jmp => 5
		2 @label_8b => @end
		3 @label_8b => @end
	['5', '0', '@end', '@end']
Noted label "@bitonicSort" which points to address 5
Line: 5
		0 push => D
		2 $rs => 6
	['D', '0', '6', '0']
Line: 6
		0 push => D
		2 $rs => A
	['D', '0', 'A', '0']
Line: 7
		0 push => D
		2 $rs => 3
	['D', '0', '3', '0']
Line: 8
		0 push => D
		2 $rs => C
	['D', '0', 'C', '0']
Line: 9
		0 add => 3
		3 $rd => A
		1 $rs => B
		2 $rt => 0
	['3', 'B', '0', 'A']
Line: 10
		0 add => 3
		3 $rd => 6
		1 $rs => 7
		2 $rt => 0
	['3', '7', '0', '6']
Line: 11
		0 add => 3
		3 $rd => 3
		1 $rs => 4
		2 $rt => 0
	['3', '4', '0', '3']
Line: 12
		0 sub => 4
		3 $rd => 9
		1 $rs => 6
		2 $rt => A
	['4', '6', 'A', '9']
Line: 13
		0 inc => 3
		1 $rd => 9
		3 $rd => 9
	['3', '9', '1', '9']
Line: 14
		0 sub => 4
		3 $rd => 9
		1 $rs => 9
		2 $rt => 1
	['4', '9', '1', '9']
Line: 15
		0 slt => B
		3 $rd => 2
		1 $rs => 1
		2 $rt => 9
	['B', '1', '9', '2']
Line: 16
		0 beq => 6
		1 $rs => 2
		2 $rt => 1
		3 @offset_4b => @@bitonicSort_end
	['6', '2', '1', '@@bitonicSort_end']
Line: 17
		0 add => 3
		3 $rd => C
		1 $rs => A
		2 $rt => 6
	['3', 'A', '6', 'C']
Line: 18
		0 rshift => 8
		1 $rd => C
		3 $rd => C
	['8', 'C', '0', 'C']
Line: 19
		0 inc => 3
		1 $rd => C
		3 $rd => C
	['3', 'C', '1', 'C']
Line: 20
		0 add => 3
		3 $rd => B
		1 $rs => A
		2 $rt => 0
	['3', 'A', '0', 'B']
Line: 21
		0 sub => 4
		3 $rd => 7
		1 $rs => C
		2 $rt => 1
	['4', 'C', '1', '7']
Line: 22
		0 add => 3
		3 $rd => 4
		1 $rs => 1
		2 $rt => 0
	['3', '1', '0', '4']
Line: 23
		0 rcall => E
		2 @label_8b => @bitonicSort
		3 @label_8b => @bitonicSort
	['E', '0', '@bitonicSort', '@bitonicSort']
Line: 24
		0 add => 3
		3 $rd => B
		1 $rs => C
		2 $rt => 0
	['3', 'C', '0', 'B']
Line: 25
		0 add => 3
		3 $rd => 7
		1 $rs => 6
		2 $rt => 0
	['3', '6', '0', '7']
Line: 26
		0 add => 3
		3 $rd => 4
		1 $rs => 0
		2 $rt => 0
	['3', '0', '0', '4']
Line: 27
		0 rcall => E
		2 @label_8b => @bitonicSort
		3 @label_8b => @bitonicSort
	['E', '0', '@bitonicSort', '@bitonicSort']
Line: 28
		0 add => 3
		3 $rd => B
		1 $rs => A
		2 $rt => 0
	['3', 'A', '0', 'B']
Line: 29
		0 add => 3
		3 $rd => 7
		1 $rs => 6
		2 $rt => 0
	['3', '6', '0', '7']
Line: 30
		0 add => 3
		3 $rd => 4
		1 $rs => 3
		2 $rt => 0
	['3', '3', '0', '4']
Line: 31
		0 rcall => E
		2 @label_8b => @bitonicMerge
		3 @label_8b => @bitonicMerge
	['E', '0', '@bitonicMerge', '@bitonicMerge']
Noted label "@bitonicSort_end" which points to address 32
Line: 32
		0 pop => C
		2 $rd => C
	['C', '0', 'C', '1']
Line: 33
		0 pop => C
		2 $rd => 3
	['C', '0', '3', '1']
Line: 34
		0 pop => C
		2 $rd => A
	['C', '0', 'A', '1']
Line: 35
		0 pop => C
		2 $rd => 6
	['C', '0', '6', '1']
Line: 36
		0 ret => F
	['F', '0', '0', '0']
Noted label "@bitonicMerge" which points to address 37
Line: 37
		0 push => D
		2 $rs => 6
	['D', '0', '6', '0']
Line: 38
		0 push => D
		2 $rs => A
	['D', '0', 'A', '0']
Line: 39
		0 push => D
		2 $rs => 3
	['D', '0', '3', '0']
Line: 40
		0 push => D
		2 $rs => C
	['D', '0', 'C', '0']
Line: 41
		0 add => 3
		3 $rd => A
		1 $rs => B
		2 $rt => 0
	['3', 'B', '0', 'A']
Line: 42
		0 add => 3
		3 $rd => 6
		1 $rs => 7
		2 $rt => 0
	['3', '7', '0', '6']
Line: 43
		0 add => 3
		3 $rd => 3
		1 $rs => 4
		2 $rt => 0
	['3', '4', '0', '3']
Line: 44
		0 sub => 4
		3 $rd => 9
		1 $rs => 6
		2 $rt => A
	['4', '6', 'A', '9']
Line: 45
		0 inc => 3
		1 $rd => 9
		3 $rd => 9
	['3', '9', '1', '9']
Line: 46
		0 add => 3
		3 $rd => C
		1 $rs => A
		2 $rt => 6
	['3', 'A', '6', 'C']
Line: 47
		0 rshift => 8
		1 $rd => C
		3 $rd => C
	['8', 'C', '0', 'C']
Line: 48
		0 inc => 3
		1 $rd => C
		3 $rd => C
	['3', 'C', '1', 'C']
Line: 49
		0 beq => 6
		1 $rs => 9
		2 $rt => 1
		3 @offset_4b => @@bitonicMerge_end
	['6', '9', '1', '@@bitonicMerge_end']
Line: 50
		0 add => 3
		3 $rd => B
		1 $rs => A
		2 $rt => 0
	['3', 'A', '0', 'B']
Line: 51
		0 add => 3
		3 $rd => 7
		1 $rs => 6
		2 $rt => 0
	['3', '6', '0', '7']
Line: 52
		0 add => 3
		3 $rd => 4
		1 $rs => 3
		2 $rt => 0
	['3', '3', '0', '4']
Line: 53
		0 rcall => E
		2 @label_8b => @bitonicCompare
		3 @label_8b => @bitonicCompare
	['E', '0', '@bitonicCompare', '@bitonicCompare']
Line: 54
		0 add => 3
		3 $rd => B
		1 $rs => A
		2 $rt => 0
	['3', 'A', '0', 'B']
Line: 55
		0 sub => 4
		3 $rd => 7
		1 $rs => C
		2 $rt => 1
	['4', 'C', '1', '7']
Line: 56
		0 add => 3
		3 $rd => 4
		1 $rs => 3
		2 $rt => 0
	['3', '3', '0', '4']
Line: 57
		0 rcall => E
		2 @label_8b => @bitonicMerge
		3 @label_8b => @bitonicMerge
	['E', '0', '@bitonicMerge', '@bitonicMerge']
Line: 58
		0 add => 3
		3 $rd => B
		1 $rs => C
		2 $rt => 0
	['3', 'C', '0', 'B']
Line: 59
		0 add => 3
		3 $rd => 7
		1 $rs => 6
		2 $rt => 0
	['3', '6', '0', '7']
Line: 60
		0 add => 3
		3 $rd => 4
		1 $rs => 3
		2 $rt => 0
	['3', '3', '0', '4']
Line: 61
		0 rcall => E
		2 @label_8b => @bitonicMerge
		3 @label_8b => @bitonicMerge
	['E', '0', '@bitonicMerge', '@bitonicMerge']
Noted label "@bitonicMerge_end" which points to address 62
Line: 62
		0 pop => C
		2 $rd => C
	['C', '0', 'C', '1']
Line: 63
		0 pop => C
		2 $rd => 3
	['C', '0', '3', '1']
Line: 64
		0 pop => C
		2 $rd => A
	['C', '0', 'A', '1']
Line: 65
		0 pop => C
		2 $rd => 6
	['C', '0', '6', '1']
Line: 66
		0 ret => F
	['F', '0', '0', '0']
Noted label "@bitonicCompare" which points to address 67
Line: 67
		0 push => D
		2 $rs => 6
	['D', '0', '6', '0']
Line: 68
		0 push => D
		2 $rs => A
	['D', '0', 'A', '0']
Line: 69
		0 push => D
		2 $rs => 3
	['D', '0', '3', '0']
Line: 70
		0 add => 3
		3 $rd => A
		1 $rs => B
		2 $rt => 0
	['3', 'B', '0', 'A']
Line: 71
		0 add => 3
		3 $rd => 6
		1 $rs => 7
		2 $rt => 0
	['3', '7', '0', '6']
Line: 72
		0 add => 3
		3 $rd => 3
		1 $rs => 4
		2 $rt => 0
	['3', '4', '0', '3']
Line: 73
		0 sub => 4
		3 $rd => 9
		1 $rs => 6
		2 $rt => A
	['4', '6', 'A', '9']
Line: 74
		0 inc => 3
		1 $rd => 9
		3 $rd => 9
	['3', '9', '1', '9']
Line: 75
		0 add => 3
		3 $rd => 5
		1 $rs => 9
		2 $rt => 0
	['3', '9', '0', '5']
Line: 76
		0 rshift => 8
		1 $rd => 5
		3 $rd => 5
	['8', '5', '0', '5']
Line: 77
		0 add => 3
		3 $rd => 8
		1 $rs => A
		2 $rt => 0
	['3', 'A', '0', '8']
Noted label "@bitonicCompare_loop" which points to address 78
Line: 78
		0 ld => 1
		2 $offset => D
		1 $rt => 8
		3 memaddr_4b => 0
	['1', '8', 'D', '0']
Line: 79
		0 add => 3
		3 $rd => 2
		1 $rs => 8
		2 $rt => 5
	['3', '8', '5', '2']
Line: 80
		0 ld => 1
		2 $offset => E
		1 $rt => 2
		3 memaddr_4b => 1
	['1', '2', 'E', '1']
Line: 81
		0 slt => B
		3 $rd => 2
		1 $rs => D
		2 $rt => E
	['B', 'D', 'E', '2']
Line: 82
		0 bne => 7
		1 $rs => 2
		2 $rt => 3
		3 @offset_4b => @@bitonicCompare_loop_end
	['7', '2', '3', '@@bitonicCompare_loop_end']
Line: 83
		0 add => 3
		3 $rd => 2
		1 $rs => 8
		2 $rt => 5
	['3', '8', '5', '2']
Line: 84
		0 st => 2
		1 $offset => D
		2 $rt => 2
		3 memaddr_4b => 0
	['2', 'D', '2', '0']
Line: 85
		0 st => 2
		1 $offset => E
		2 $rt => 8
		3 memaddr_4b => 1
	['2', 'E', '8', '1']
Noted label "@bitonicCompare_loop_end" which points to address 86
Line: 86
		0 inc => 3
		1 $rd => 8
		3 $rd => 8
	['3', '8', '1', '8']
Line: 87
		0 add => 3
		3 $rd => F
		1 $rs => A
		2 $rt => 5
	['3', 'A', '5', 'F']
Line: 88
		0 slt => B
		3 $rd => 2
		1 $rs => F
		2 $rt => 8
	['B', 'F', '8', '2']
Line: 89
		0 beq => 6
		1 $rs => 2
		2 $rt => 0
		3 @offset_4b => @@bitonicCompare_end
	['6', '2', '0', '@@bitonicCompare_end']
Line: 90
		0 jmp => 5
		2 @label_8b => @bitonicCompare_loop
		3 @label_8b => @bitonicCompare_loop
	['5', '0', '@bitonicCompare_loop', '@bitonicCompare_loop']
Noted label "@bitonicCompare_end" which points to address 91
Line: 91
		0 pop => C
		2 $rd => 3
	['C', '0', '3', '1']
Line: 92
		0 pop => C
		2 $rd => A
	['C', '0', 'A', '1']
Line: 93
		0 pop => C
		2 $rd => 6
	['C', '0', '6', '1']
Line: 94
		0 ret => F
	['F', '0', '0', '0']

stat: 95 total lines, range from 0x00 to 0x5e
A00B
A077
A014
E005
5004
D060
D0A0
D030
D0C0
3B0A
3706
3403
46A9
3919
4919
B192
621F
3A6C
8C0C
3C1C
3A0B
4C17
3104
E005
3C0B
3607
3004
E005
3A0B
3607
3304
E025
C0C1
C031
C0A1
C061
F000
D060
D0A0
D030
D0C0
3B0A
3706
3403
46A9
3919
3A6C
8C0C
3C1C
691C
3A0B
3607
3304
E043
3A0B
4C17
3304
E025
3C0B
3607
3304
E025
C0C1
C031
C0A1
C061
F000
D060
D0A0
D030
3B0A
3706
3403
46A9
3919
3905
8505
3A08
18D0
3852
12E1
BDE2
7233
3852
2D20
2E81
3818
3A5F
BF82
6201
504E
C031
C0A1
C061
F000

Final output:
var_insn_mem(0):= X"A00B"; -- 0: 	ldi low_param,  0

var_insn_mem(1):= X"A077"; -- 1: 	ldi high_param, 7 // N-1 elements

var_insn_mem(2):= X"A014"; -- 2: 	ldi dir_param,  1

var_insn_mem(3):= X"E005"; -- 3: 	rcall @bitonicSort

var_insn_mem(4):= X"5004"; -- 4: 	jmp @end

var_insn_mem(5):= X"D060"; -- 5: 	push high

var_insn_mem(6):= X"D0A0"; -- 6: 	push low

var_insn_mem(7):= X"D030"; -- 7: 	push dir

var_insn_mem(8):= X"D0C0"; -- 8: 	push midpoint

var_insn_mem(9):= X"3B0A"; -- 9: 	add low, low_param, r0

var_insn_mem(10):= X"3706"; -- 10: 	add high, high_param, r0

var_insn_mem(11):= X"3403"; -- 11: 	add dir, dir_param, r0

var_insn_mem(12):= X"46A9"; -- 12: 	sub length, high, low

var_insn_mem(13):= X"3919"; -- 13: 	inc length

var_insn_mem(14):= X"4919"; -- 14: 	sub length, length, r1

var_insn_mem(15):= X"B192"; -- 15: 	slt cmp, r1, length

var_insn_mem(16):= X"621F"; -- 16: 	beq cmp, r1, @bitonicSort_end

var_insn_mem(17):= X"3A6C"; -- 17: 	add midpoint, low, high

var_insn_mem(18):= X"8C0C"; -- 18: 	rshift midpoint

var_insn_mem(19):= X"3C1C"; -- 19: 	inc midpoint

var_insn_mem(20):= X"3A0B"; -- 20: 	add low_param, low, r0

var_insn_mem(21):= X"4C17"; -- 21: 	sub high_param, midpoint, r1

var_insn_mem(22):= X"3104"; -- 22: 	add dir_param, r1, r0

var_insn_mem(23):= X"E005"; -- 23: 	rcall @bitonicSort

var_insn_mem(24):= X"3C0B"; -- 24: 	add low_param, midpoint, r0

var_insn_mem(25):= X"3607"; -- 25: 	add high_param, high, r0

var_insn_mem(26):= X"3004"; -- 26: 	add dir_param, r0, r0

var_insn_mem(27):= X"E005"; -- 27: 	rcall @bitonicSort

var_insn_mem(28):= X"3A0B"; -- 28: 	add low_param, low, r0

var_insn_mem(29):= X"3607"; -- 29: 	add high_param, high, r0

var_insn_mem(30):= X"3304"; -- 30: 	add dir_param, dir, r0

var_insn_mem(31):= X"E025"; -- 31: 	rcall @bitonicMerge

var_insn_mem(32):= X"C0C1"; -- 32: 	pop midpoint

var_insn_mem(33):= X"C031"; -- 33: 	pop dir

var_insn_mem(34):= X"C0A1"; -- 34: 	pop low

var_insn_mem(35):= X"C061"; -- 35: 	pop high

var_insn_mem(36):= X"F000"; -- 36: 	ret

var_insn_mem(37):= X"D060"; -- 37: 	push high

var_insn_mem(38):= X"D0A0"; -- 38: 	push low

var_insn_mem(39):= X"D030"; -- 39: 	push dir

var_insn_mem(40):= X"D0C0"; -- 40: 	push midpoint

var_insn_mem(41):= X"3B0A"; -- 41: 	add low, low_param, r0

var_insn_mem(42):= X"3706"; -- 42: 	add high, high_param, r0

var_insn_mem(43):= X"3403"; -- 43: 	add dir, dir_param, r0

var_insn_mem(44):= X"46A9"; -- 44: 	sub length, high, low

var_insn_mem(45):= X"3919"; -- 45: 	inc length

var_insn_mem(46):= X"3A6C"; -- 46: 	add midpoint, low, high

var_insn_mem(47):= X"8C0C"; -- 47: 	rshift midpoint

var_insn_mem(48):= X"3C1C"; -- 48: 	inc midpoint

var_insn_mem(49):= X"691C"; -- 49: 	beq length, r1, @bitonicMerge_end

var_insn_mem(50):= X"3A0B"; -- 50: 	add low_param, low, r0

var_insn_mem(51):= X"3607"; -- 51: 	add high_param, high, r0

var_insn_mem(52):= X"3304"; -- 52: 	add dir_param, dir, r0

var_insn_mem(53):= X"E043"; -- 53: 	rcall @bitonicCompare

var_insn_mem(54):= X"3A0B"; -- 54: 	add low_param, low, r0

var_insn_mem(55):= X"4C17"; -- 55: 	sub high_param, midpoint, r1

var_insn_mem(56):= X"3304"; -- 56: 	add dir_param, dir, r0

var_insn_mem(57):= X"E025"; -- 57: 	rcall @bitonicMerge

var_insn_mem(58):= X"3C0B"; -- 58: 	add low_param, midpoint, r0

var_insn_mem(59):= X"3607"; -- 59: 	add high_param, high, r0

var_insn_mem(60):= X"3304"; -- 60: 	add dir_param, dir, r0

var_insn_mem(61):= X"E025"; -- 61: 	rcall @bitonicMerge

var_insn_mem(62):= X"C0C1"; -- 62: 	pop midpoint

var_insn_mem(63):= X"C031"; -- 63: 	pop dir

var_insn_mem(64):= X"C0A1"; -- 64: 	pop low

var_insn_mem(65):= X"C061"; -- 65: 	pop high

var_insn_mem(66):= X"F000"; -- 66: 	ret

var_insn_mem(67):= X"D060"; -- 67: 	push high

var_insn_mem(68):= X"D0A0"; -- 68: 	push low

var_insn_mem(69):= X"D030"; -- 69: 	push dir

var_insn_mem(70):= X"3B0A"; -- 70: 	add low, low_param, r0

var_insn_mem(71):= X"3706"; -- 71: 	add high, high_param, r0

var_insn_mem(72):= X"3403"; -- 72: 	add dir, dir_param, r0

var_insn_mem(73):= X"46A9"; -- 73: 	sub length, high, low

var_insn_mem(74):= X"3919"; -- 74: 	inc length

var_insn_mem(75):= X"3905"; -- 75: 	add dist, length, r0

var_insn_mem(76):= X"8505"; -- 76: 	rshift dist

var_insn_mem(77):= X"3A08"; -- 77: 	add i, low, r0

var_insn_mem(78):= X"18D0"; -- 78: 	ld tag_i, i, 0

var_insn_mem(79):= X"3852"; -- 79: 	add cmp, i, dist

var_insn_mem(80):= X"12E1"; -- 80: 	ld tag_idist, cmp, 1

var_insn_mem(81):= X"BDE2"; -- 81: 	slt cmp, tag_i, tag_idist

var_insn_mem(82):= X"7233"; -- 82: 	bne cmp, dir, @bitonicCompare_loop_end

var_insn_mem(83):= X"3852"; -- 83: 	add cmp, i, dist

var_insn_mem(84):= X"2D20"; -- 84: 	st tag_i, cmp, 0 // Save $tag_i to mem[i+dist]

var_insn_mem(85):= X"2E81"; -- 85: 	st tag_idist, i, 1  // Save tag_idist to mem[i]

var_insn_mem(86):= X"3818"; -- 86: 	inc i

var_insn_mem(87):= X"3A5F"; -- 87: 	add tmp, low, dist

var_insn_mem(88):= X"BF82"; -- 88: 	slt cmp, tmp, i

var_insn_mem(89):= X"6201"; -- 89: 	beq cmp, r0, @bitonicCompare_end

var_insn_mem(90):= X"504E"; -- 90: 	jmp @bitonicCompare_loop

var_insn_mem(91):= X"C031"; -- 91: 	pop dir

var_insn_mem(92):= X"C0A1"; -- 92: 	pop low

var_insn_mem(93):= X"C061"; -- 93: 	pop high

var_insn_mem(94):= X"F000"; -- 94: 	ret


Wrote hex to program.hex
